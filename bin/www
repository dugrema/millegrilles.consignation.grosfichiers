#!/usr/bin/env node

const debug = require('debug')('millegrilles:www')
const express = require('express')
const logger = require('morgan');

const {initialiser: initialiserServer} = require('./server')
const {initialiser: initialiserApp} = require('./app');
const amqpdao = require('../models/amqpdao')

async function init() {

  // Connexion AMQ
  const {amqpdao: instAmqpdao} = await amqpdao.init()
  const idmg = instAmqpdao.pki.idmg

  debug("Initialisation serveur IDMG : %s", idmg)

  // Creer une collection avec la connexion a MQ (format qui supporte hebergement)
  const rabbitMQParIdmg = {
    [idmg]: instAmqpdao
  }

  const fctRabbitMQParIdmg = (idmg) => {
    return rabbitMQParIdmg[idmg]
  }

  const root = express()
  root.use(logger('dev'))

  // Injecter fonction de mapping de RabbitMQ
  root.use((req, res, next) => {
    req.fctRabbitMQParIdmg = fctRabbitMQParIdmg
    next()
  })

  const serverInstance = initialiserServer(root)

  const app = await initialiserApp()
  root.use(app)

}

init()
